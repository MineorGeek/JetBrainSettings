<application>
  <component name="AppStorage">
    <histories>
      <item value="优化" />
      <item value="Returns the input stream connected to the normal output of the subprocess" />
      <item value="Returns the output stream connected to the normal input of the subprocess. Output to the stream is piped into the standard input of the process represented by this Process object. If the standard input of the subprocess has been redirected using ProcessBuilder.redirectInput then this method will return a null output stream.  Implementation note: It is a good idea for the returned output stream to be buffered.  " />
      <item value=" it seems a process reaper is related to the Linux kernel process management and is a daemon thread. It maintains the process state so that resources can be freed/released/collected on process termination and so on" />
      <item value=" failure to promptly write the input stream or read the output stream of the subprocess " />
      <item value="/var/folders/dc/6 r 6_0 dcj 0 pj 6 lrzlh 1 m 87 nlw 0000 gn/T/plaintext 3206351954413702585.tmp" />
      <item value="and safety, and it enforces a stronger degree of coherency to reduce the number of states that must be considered." />
      <item value="Raft separates the key elements of consensus," />
      <item value="Raft is a consensus algorithm for managing a replicated log." />
      <item value="Files.createTempFile} method provides an alternative method to create an * empty file in the temporary-file directory. Files created by that method * may have more restrictive access permissions to files created by this * method and so may be more suited to security-sensitive applications." />
      <item value="case study" />
      <item value="It happens when GPG is confused where to read input from" />
      <item value="Inappropriate ioctl for device" />
      <item value="Implementation note: It is a good idea for the returned      * input stream to be buffered." />
      <item value="A String containing the contents of the line, not including any line-termination characters, or null if the end of the stream has been reached" />
      <item value="解密内容" />
      <item value="errorText" />
      <item value="the common destination of standard error and standard output can be redirected using redirectOutput" />
      <item value="If the value is set to true, then:  standard error is merged with the standard output and always sent to the same destination (this makes it easier to correlate error messages with the corresponding output) the common destination of standard error and standard output can be redirected using redirectOutput any redirection set by the redirectError method is ignored when creating a subprocess the stream returned from Process.getErrorStream() will always be a null input stream" />
      <item value="a destination for standard output and standard error. By default, the subprocess writes standard output and standard error to pipes. Java code can access these pipes via the input streams returned by Process.getInputStream() and Process.getErrorStream(). However, standard output and standard error may be redirected to other destinations using redirectOutput and redirectError. In this case, Process.getInputStream() and/or Process.getErrorStream() will return a null input stream, for which:" />
      <item value=" identical or related attributes." />
      <item value="ProcessBuilder is new in Java 5 and makes running external processes easier. In my opinion, its most significant improvement over Runtime.getRuntime().exec() is that it allows you to redirect the standard error of the child process into its standard output. This means you only have one InputStream to read from. Before this, you needed to have two separate Threads, one reading from stdout and one reading from stderr, to avoid the standard error buffer filling while the standard output buffer was empty (causing the child process to hang), or vice versa." />
      <item value="明文" />
      <item value="We want to cache the stream contents for now, so we don't leak open streams from a Process instance." />
      <item value="piped" />
      <item value="Returns the output stream connected to the normal input of the subprocess." />
      <item value="Returns the input stream connected to the error output of the subprocess." />
      <item value="cipher" />
      <item value="By default, the created subprocess does not have its own terminal or console. All its standard I/O (i.e. stdin, stdout, stderr) operations will be redirected to the parent process, where they can be accessed via the streams obtained using the methods getOutputStream(), getInputStream(), and getErrorStream(). The parent process uses these streams to feed input to and get output from the subprocess. Because some native platforms only provide limited buffer size for standard input and output streams, failure to promptly write the input stream or read the output stream of the subprocess may cause the subprocess to block, or even deadlock." />
      <item value="By default, the created subprocess does not have its own terminal or console." />
      <item value="The methods that create processes may not work well for special processes on certain native platforms, such as native windowing processes, daemon processes, Win16/DOS processes on Microsoft Windows, or shell scripts." />
      <item value="performing" />
      <item value="represented" />
      <item value="内容" />
      <item value="Ken and Sunny, as we discussed previously, we have large of number of customers who is margin account and they donot have the funds of 100 shares ,we discussed that they would be able to subscription under 10 time leverage.  we found that more than 800 customer's order of 09988.HK was rejected,  we need to resubmit the files and we need their subscriptions are effected. Could you please help us to handle the problem? " />
      <item value="Are you ready to send us multiple files a day including 9988.HK? This ensure we have sufficient funding prepared and allocated on our end." />
      <item value="recalculate" />
      <item value="accrued" />
      <item value="eod" />
      <item value="kimber" />
      <item value="komber" />
      <item value="kombir" />
      <item value="kombier" />
      <item value="概率" />
      <item value="quota" />
      <item value="Fixed quota" />
      <item value="固定额度" />
      <item value="绝对值" />
      <item value="固定" />
      <item value="定额分配" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="226" />
        <entry key="ENGLISH" value="327" />
        <entry key="ARABIC" value="1" />
        <entry key="BULGARIAN" value="1" />
        <entry key="FRENCH" value="3" />
        <entry key="LATIN" value="1" />
        <entry key="JAPANESE" value="3" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="5270ca83735d52d0" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>