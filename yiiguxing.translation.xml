<application>
  <component name="AppStorage">
    <histories>
      <item value="all non-transient fields" />
      <item value="quorum" />
      <item value="最后一次" />
      <item value="latest" />
      <item value="dummy" />
      <item value="dummary" />
      <item value="This method does not wait for previously submitted tasks to      * complete execution.  Use {@link #awaitTermination awaitTermination}      * to do that." />
      <item value="Initiates an orderly shutdown in which previously submitted      * tasks are executed, but no new tasks will be accepted.      * Invocation has no additional effect if already shut down." />
      <item value="ahead" />
      <item value="现有" />
      <item value="数据已经回滚" />
      <item value="percent" />
      <item value="统计信息" />
      <item value="隔离" />
      <item value="mutex" />
      <item value="互斥" />
      <item value="preemption" />
      <item value="抢占" />
      <item value="compete" />
      <item value="竞争" />
      <item value="isolation" />
      <item value="写隔离" />
      <item value="issue" />
      <item value="Auto - the container will issue the ack/nack based on whether &#9; * the listener returns normally, or throws an exception. &#9; * &lt;p&gt;&lt;em&gt;Do not confuse with RabbitMQ {@code autoAck} which is &#9; * represented by {@link #NONE} here&lt;/em&gt;." />
      <item value="correlation" />
      <item value="correlationData" />
      <item value="reconcile" />
      <item value="criteria" />
      <item value="Milestone" />
      <item value="一个小时内" />
      <item value="前一个小时" />
      <item value="未处理" />
      <item value="记录仍未审核" />
      <item value="存在未审核记录、" />
      <item value="存在未审核记录" />
      <item value="Loan" />
      <item value="LoanValue" />
      <item value="auth" />
      <item value="验证" />
      <item value="extRequestID contains client supplied requestID (present only if nonempty in the request)" />
      <item value="百分百" />
      <item value="解析" />
      <item value="resolve" />
      <item value="optimize " />
      <item value="SwitchOn" />
      <item value="SwitchO" />
      <item value="Main endpoints are required and are thus announced immediately  * while additional endpoints are only announced if the path also has a main  * endpoint. " />
      <item value="decoupled" />
      <item value="When announcing an endpoint with additional endpoints they all need to join  * the path together. However, announcements are decoupled and can happen in any  * order. The ZkAnnouncer will gather endpoints together in order to announce  * them as a group. Main endpoints are required and are thus announced immediately  * while additional endpoints are only announced if the path also has a main  * endpoint. For this reason if a main endpoint is announced first and an additional  * endpoint announced later, the announcer must leave the path and re-announce. The  * process is similar: leave the path, then remove either the additional endpoint  * or the main endpoint, re-join only if the main endpoint exists." />
      <item value="注册" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1" />
        <entry key="ENGLISH" value="46" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="5270ca83735d52d0" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>