<application>
  <component name="AppStorage">
    <histories>
      <item value="anticipation" />
      <item value="ongoing" />
      <item value="waitStatus value to indicate successor's thread needs unparking */" />
      <item value="Indicate that we * need a signal, but don't park yet." />
      <item value="PROPAGATE" />
      <item value="This node has already set status asking a release * to signal it, so it can safely park." />
      <item value="Head of the wait queue, lazily initialized. Except for * initialization, it is modified only via method setHead. Note: * If head exists, its waitStatus is guaranteed not to be * CANCELLED." />
      <item value="enqueues" />
      <item value="This class defines a nested {@link ConditionObject} class that * can be used as a {@link Condition} implementation by subclasses * supporting exclusive mode for which method {@link * #isHeldExclusively} reports whether synchronization is exclusively * held with respect to the current thread, method {@link #release} * invoked with the current {@link #getState} value fully releases * this object, and {@link #acquire}, given this saved state value, * eventually restores this object to its previous acquired state. No * {@code AbstractQueuedSynchronizer} method otherwise creates such a * condition, so if this constraint cannot be met, do not use it. The * behavior of {@link ConditionObject} depends of course on the * semantics of its synchronizer implementation." />
      <item value="nested" />
      <item value="Subclasses that support only exclusive or * only shared modes need not define the methods supporting the unused mode." />
      <item value="Usually, implementation subclasses support only * one of these modes, but both can come into play for example in a * {@link ReadWriteLock}." />
      <item value="This class * does not &amp;quot;understand&amp;quot; these differences except in the * mechanical sense that when a shared mode acquire succeeds, the next * waiting thread (if one exists) must also determine whether it can * acquire as well." />
      <item value="mechanical" />
      <item value="acquired" />
      <item value="Instead it defines methods such as * {@link #acquireInterruptibly} that can be invoked as * appropriate by concrete locks and related synchronizers to * implement their public methods." />
      <item value="appropriate" />
      <item value="synchronization" />
      <item value="enclosing" />
      <item value="respect" />
      <item value="tracked" />
      <item value="manipulated" />
      <item value="atomically" />
      <item value="mechanics" />
      <item value="carry * out" />
      <item value="Given these, the other methods in this class carry * out all queuing and blocking mechanics." />
      <item value="and which * define what that state means in terms of this object being acquired * or released." />
      <item value="Subclasses" />
      <item value="represent" />
      <item value="早于" />
      <item value="prematurely" />
      <item value="If the FTP server prematurely closes the connection as a result" />
      <item value="多余" />
      <item value="转移" />
      <item value="迁移" />
      <item value="Principle" />
      <item value="limit" />
      <item value="额度" />
      <item value="金额" />
      <item value="个人" />
      <item value="额度是否足够" />
      <item value="分配" />
      <item value="可分配" />
      <item value="最近的" />
      <item value="quota" />
      <item value="配额" />
      <item value="Amount" />
      <item value="explicitly" />
      <item value="使用" />
      <item value="消耗" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="186" />
        <entry key="ENGLISH" value="254" />
        <entry key="ARABIC" value="1" />
        <entry key="BULGARIAN" value="1" />
        <entry key="FRENCH" value="3" />
        <entry key="LATIN" value="1" />
        <entry key="JAPANESE" value="3" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="5270ca83735d52d0" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>