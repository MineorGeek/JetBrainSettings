<application>
  <component name="AppStorage">
    <histories>
      <item value="The design space of distributed systems tracing tools has been explored in a number of excellent previous articles, among which Pinpoint [9], Magpie [3] and X-Trace [12] are most closely related to Dapper." />
      <item value="We have found that Dapper’s system-wide data often focuses a performance investigation so that other tools can be applied locally." />
      <item value="Making the system scalable and reducing performance overhead was facilitated by the use of adaptive sampling, as will be described in Section 4.4." />
      <item value="An additional design goal is for tracing data to be available for analysis quickly after it is generated: ideally within a minute. Although a trace analysis system operating on hours-old data is still quite valuable, the availability of fresh information enables faster reaction to production anomalies." />
      <item value="idealy" />
      <item value="Scalability" />
      <item value="This is especially important in a fast-paced development environment such as ours." />
      <item value="A tracing infrastructure that relies on active collaboration from application-level developers in order to function becomes extremely fragile, and is often broken due to instrumentation bugs or omissions, therefore violating the ubiquity requirement." />
      <item value="collaboration" />
      <item value="transparency" />
      <item value="compel" />
      <item value="Low overhead" />
      <item value="In addition, monitoring should always be turned on, because it is often the case that unusual or otherwise noteworthy system behavior is difﬁcult or impossible to reproduce." />
      <item value="Ubiquity is important since the usefulness of a tracing infrastructure can be severly impacted if even small parts of the system are not being monitored." />
      <item value="The scenario described above gives rise to two fundamental requirements for Dapper" />
      <item value="user-visible" />
      <item value="A front-end service may distribute a web query to many hundreds of query servers, each searching within its own piece of the index. The query may also be sent to a number of other sub-systems that may process advertisements, check spelling, or look for specialized results, including images, videos, news, and so on." />
      <item value="A web-search example will illustrate some of the challenges such a system needs to address." />
      <item value="Such systems are of special interest  because large collections of small servers are a particularly cost-efﬁcient platform for Internet services workloads. " />
      <item value="Such systems are of special interest  because large collections of small servers are a particularly cost-efﬁcient platform for Internet services workloads [4]. " />
      <item value="Such systems are of special interest  because large collections of small servers are a particularly cost-efﬁcient platform for Internet services workloads [4]. Understanding system behavior in this context requires observing related activities across many different programs and machines." />
      <item value="The main goal of this paper is to report on our experience building, deploying and using the system for over two years, since Dapper’s foremost measure of success has been its usefulness to developer and operations teams." />
      <item value="Dapper shares conceptual similarities with other tracing systems, particularly Magpie [3] and X-Trace [12], but certain design choices were made that have been key to its success in our environment, such as the use of sampling and restricting the instrumentation to a rather small number of common libraries." />
      <item value="load IPO Data" />
      <item value="Importing a class is effectively the same as declaring bean methods" />
      <item value="Decorates" />
      <item value="Indicates" />
      <item value="Decides" />
      <item value="Allows someone to add tags to a span if a trace is in progress" />
      <item value="Controls aspects of tracing such as the service name that shows up in the UI" />
      <item value="So that javascript can be hosted elsewhere" />
      <item value="Frontend" />
      <item value="Backend" />
      <item value="practice" />
      <item value="registration" />
      <item value="allowing" />
      <item value="Extension to the standard {@link BeanFactoryPostProcessor} SPI, allowing for * the registration of further bean definitions &lt;i&gt;before&lt;/i&gt; regular * BeanFactoryPostProcessor detection kicks in. In particular, * BeanDefinitionRegistryPostProcessor may register further bean definitions * which in turn define BeanFactoryPostProcessor instances." />
      <item value="Extension" />
      <item value="omnibus" />
      <item value="机构行情购买" />
      <item value="expect" />
      <item value="aggregation" />
      <item value="聚合" />
      <item value="个人" />
      <item value="institution" />
      <item value="公司实体" />
      <item value="限制" />
      <item value="机构" />
      <item value="Separate Trading Limit Account" />
      <item value="Proprietary Trading Groups" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="220" />
        <entry key="ENGLISH" value="295" />
        <entry key="ARABIC" value="1" />
        <entry key="BULGARIAN" value="1" />
        <entry key="FRENCH" value="3" />
        <entry key="LATIN" value="1" />
        <entry key="JAPANESE" value="3" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="5270ca83735d52d0" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>